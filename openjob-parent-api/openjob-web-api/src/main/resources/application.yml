
server:
    port: 80
    servlet:
        context-path: /api/web
spring:
    thymeleaf:
        enabled: true
        prefix: classpath:/templates/
        suffix: .html
    task:
        scheduling:
            pool:
                size: 8
    jackson:
        serialization:
          fail-on-empty-beans: false
    datasource:
        hikari:
            auto-commit: false
            maximum-pool-size: 1
            minimum-idle: 1
            max-lifetime: 300000
        url: jdbc:mysql://localhost:3306/openjobdb?createDatabaseIfNotExist=true
        password: 123456
        username: root
#        password: DeoaolGAcfXkG4dsXGn5
#        url: jdbc:mysql://be7rthtqxjtp0hj0gdjh-mysql.services.clever-cloud.com:3306/be7rthtqxjtp0hj0gdjh
#        username: u1wnjbbsiay1iy1h
    jpa:
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                connection:
                    provider_disables_autocommit: true
                dialect: org.hibernate.dialect.MySQL8Dialect
                format_sql: true
        show-sql: true
    data:
      jpa:
        repositories:
            bootstrap-mode: default
    servlet:
        multipart:
            max-file-size: 1MB
            max-request-size: 2MB
    security:
        oauth2:
            client:
                registration:
                    google:
                        clientId: 229734332823-8jdggdtsu3mjpb9gahi9pg4ggot23o0f.apps.googleusercontent.com
                        clientSecret: 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
                        redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
                        scope:
                            - email
                            - profile
app:
    auth:
        tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
        tokenExpirationMsec: 864000000
    oauth2:
        # After successfully authenticating with the OAuth2 Provider,
        # we'll be generating an auth token for the user and sending the token to the
        # redirectUri mentioned by the client in the /oauth2/authorize request.
        # We're not using cookies because they won't work well in mobile clients.
        authorizedRedirectUris:
            - http://localhost:5173/oauth2/redirect


# client-side
client:
    base_url: http://localhost:5173

# paypal
paypal:
    mode: sandbox
    client_id: AVBqsyz16FK5wSCuvW8sbZwC1Y8RoALBzEtK0lwK5E-6kMfGUZ1WtRDWBK9GZxGPPWHGPAJlTfE0Ytpj
    secret_key: EHxTScKIts2smmfOxj1SaRGGwYW9MuvrB_yNVGcstCc-2zZvTPVWB9q5jNZXpsGZvhsvNv3NOBBp2e8S